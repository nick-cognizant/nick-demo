name: Docker Image CI

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Extract version from package.json
      id: pkg
      run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nick-demo 
        IMAGE_TAG: ${{ steps.pkg.outputs.version }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update deployment image tag
      if: ${{ success() }}
      run: |
        TAG=${{ steps.docker_build.outputs.digest }}
        echo "New image tag: $TAG"
        git clone https://github.com/nick-cognizant/nick-demo-manifest.git
        cd nick-demo-manifest
        sed -i "s|image: your-docker-username/your-repository:.*|image: your-docker-username/your-repository:$TAG|" values.yaml
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am "Update image tag"
        git push
      env:
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
